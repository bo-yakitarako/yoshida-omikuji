import {
  ChatInputCommandInteraction,
  Client,
  MessageFlags,
  PermissionsBitField,
  TextChannel,
} from 'discord.js';
import { NoticeChannel } from '../db/NoticeChannel';
import { makeButtonRow } from '../utils';

const flags = MessageFlags.Ephemeral;

export const setNoticeChannel = async (interaction: ChatInputCommandInteraction) => {
  const { guildId, channel, channelId } = interaction;
  if (guildId === null || !(channel instanceof TextChannel)) {
    await interaction.reply({ content: 'こんなところに通知するのは野暮だと思わないか？', flags });
    return;
  }
  if (!(await checkAdmin(interaction))) {
    return;
  }
  const noticeChannel = await NoticeChannel.find({ guildId });
  if (noticeChannel === null) {
    await NoticeChannel.create({ guildId, channelId });
  } else {
    await noticeChannel.update({ channelId });
  }
  await interaction.reply(`この**${channel.name}**チャンネルを通知先にしたよ`);
};

export const clearNotice = async (interaction: ChatInputCommandInteraction) => {
  const { guildId } = interaction;
  if (guildId === null) {
    await interaction.reply({ content: 'ここどこー？', flags });
    return;
  }
  if (!(await checkAdmin(interaction))) {
    return;
  }
  const noticeChannel = await NoticeChannel.find({ guildId });
  if (noticeChannel === null) {
    await interaction.reply({ content: 'あれぇ？このサーバーで通知設定した覚えはないぞぉ', flags });
    return;
  }
  await noticeChannel.delete();
  await interaction.reply('うわーん！もうこんなサーバーに通知すんのなんかこっちから願い下げだ！');
};

const checkAdmin = async (interaction: ChatInputCommandInteraction) => {
  const { member } = interaction;
  if (member === null || !(member.permissions instanceof PermissionsBitField)) {
    await interaction.reply({ content: 'ほ？', flags });
    return false;
  }
  if (!member.permissions.has(PermissionsBitField.Flags.Administrator)) {
    await interaction.reply('般ピーにできるわけなかろう？管理人になって出直してきな');
    return false;
  }
  return true;
};

const messages = [
  'よお、昨日もよく頑張ったな！今日もお前のペースで、気楽に一歩進もうぜ。',
  '昨日のお疲れ、ちゃんと見てたぞ。今日もその調子で、笑顔でやってこう！',
  '新しい一日だ！昨日乗り越えたお前なら、今日もいい感じで進めるぜ。',
  '昨日もお前らしい頑張りだったな。今日も焦らず、マイペースでいこう！',
  'お疲れ、昨日も一歩前進だ！今日もお前のスタイルで、楽しんで進もうぜ。',
  '昨日はいい仕事してたな！今日もそのリズムで、のんびりやってこう。',
  'よお、昨日もちゃんとやってたぜ！今日もお前のいいとこ見せてくれよ。',
  '新しい日、スタートだ！昨日のお前なら、今日もバッチリいけるぜ。',
  '昨日も頑張ったな！今日も無理せず、笑顔で一歩踏み出そうぜ。',
  'お前、昨日もいい汗かいてたな。今日もその調子で、気楽にやろうな！',
  '昨日乗り越えたお前、最高だ！今日も自分のペースで、楽しんでいこうぜ。',
  '昨日のお疲れは、今日のパワーに変わるよ。ゆっくりスタートして、やってこう！',
  'よお、昨日もお前らしい一日だったな！今日もそのままで、気楽に進もう。',
  '新しい一日、チャンス到来だ！昨日も頑張ったお前なら、今日もイケるぜ。',
  '昨日もちゃんと前進してたな！今日もお前のリズムで、笑顔でやろうぜ。',
  'お疲れ、昨日もいい感じだったぞ！今日も焦らず、一歩ずつ進もうな。',
  '昨日はよく耐えたな！今日もお前のスタイルで、のんびりやってこうぜ。',
  '新しい日だ！昨日のお前なら、今日もいいことやってくれるよな！',
  '昨日も頑張ったな、えらいぞ！今日もマイペースで、楽しんでいこう。',
  'お前、昨日も光ってたな！今日もその調子で、気楽に一歩進もうぜ。',
  '昨日のお疲れ、ちゃんと積み上がってるぞ。今日も笑顔でやってこう！',
  '新しい一日、スタートだ！昨日も頑張ったお前なら、今日もバッチリだ。',
  '昨日もいい仕事してたな！今日もお前のペースで、のんびり進もうぜ。',
  'お疲れ、昨日もお前らしい一日だったな！今日もそのままで、やってこう！',
  '昨日乗り越えたお前、最高だ！今日も焦らず、自分のリズムでいこうぜ。',
  '新しい日、チャンスだらけだ！昨日も頑張ったお前なら、今日もイケる！',
  '昨日もちゃんとやってたな！今日もお前のいいとこ見せて、楽しんでこうぜ。',
  'お疲れ、昨日も一歩前進だ！今日も無理せず、笑顔でやってこうな。',
  '昨日はいい汗かいてたな！今日もその調子で、気楽に進もうぜ。',
  'よお、昨日もお前らしい頑張りだったな！今日も気楽に、一歩進もうぜ。',
  '新しい一日だ！昨日のお前なら、今日もいい感じで進めるぜ。',
  '昨日も頑張ったな！今日もお前のスタイルで、のんびりやってこうぜ。',
  'お前、昨日もちゃんとやってたな！今日も笑顔で、一歩踏み出そうぜ。',
  '昨日のお疲れは、今日の力になるよ。ゆっくりスタートして、やってこう！',
  '新しい日、始まったな！昨日も頑張ったお前なら、今日もバッチリだ。',
  '昨日もいい感じだったぞ！今日もお前のペースで、気楽に進もうぜ。',
  'お疲れ、昨日もよく耐えたな！今日も焦らず、楽しんでいこうな。',
  '昨日もお前らしい一日だったな！今日もそのままで、マイペースにやろう。',
  '新しい一日、チャンス到来だ！昨日のお前なら、今日もいい仕事できるぜ。',
  '昨日も頑張ったな、えらいぞ！今日も笑顔で、のんびり進もうぜ。',
  'お前、昨日も光ってたな！今日もその調子で、気楽にやってこう！',
  '昨日のお疲れ、ちゃんと積み上がってるぞ。今日も自分のペースでいこうな。',
  '新しい日だ！昨日も頑張ったお前なら、今日もいい感じで進めるぜ。',
  '昨日もいい仕事してたな！今日もお前のリズムで、楽しんでやってこう。',
  'お疲れ、昨日も一歩前進だ！今日も無理せず、笑顔で進もうぜ。',
  '昨日はいい汗かいてたな！今日もその調子で、のんびりやってこうな。',
  'よお、昨日もお前らしい頑張りだったな！今日も気楽に、一歩進もうぜ。',
  '新しい一日、スタートだ！昨日のお前なら、今日もバッチリいけるぜ。',
  '昨日もちゃんとやってたな！今日もお前のスタイルで、楽しんでいこう。',
  'お疲れ、昨日もいい感じだったぞ！今日もマイペースで、笑顔でやろうぜ。',
  '昨日もよく頑張ったな！今日もお前のリズムで、気楽に進んでいこうぜ。',
  'おい、昨日もちゃんとやってたな！今日も楽しんで、一歩進もうぜ。',
  '昨日のお疲れ、ちゃんと見てたぞ！今日もお前のペースで、やってこう！',
  '新しい日だ！昨日も頑張ったお前なら、今日もいい感じでいけるぜ。',
  '昨日もお前らしい一日だったな！今日もそのままで、のんびりやろうぜ。',
  'お疲れ、昨日も一歩前進だ！今日も焦らず、笑顔で進もうな。',
  '昨日はいい仕事してたな！今日もお前のスタイルで、気楽にやってこう。',
  'よお、昨日も頑張ったな！今日もマイペースで、楽しんでいこうぜ。',
  '新しい一日、チャンスだ！昨日のお前なら、今日もバッチリやってくれるよな。',
  '昨日もいい汗かいてたな！今日もその調子で、のんびり進もうぜ。',
  'お前、昨日も光ってたな！今日も気楽に、自分のペースでやってこう！',
  '昨日のお疲れは、今日の力になるぜ。ゆっくりスタートして、楽しんでいこう。',
  '新しい日、始まったな！昨日も頑張ったお前なら、今日も最高だぜ。',
  '昨日もいい感じだったぞ！今日もお前のリズムで、笑顔でやってこう。',
  'お疲れ、昨日もよく耐えたな！今日も無理せず、気楽に進もうぜ。',
  '昨日もお前らしい頑張りだったな！今日もそのままで、マイペースにやろう。',
  '新しい一日、スタートだ！昨日のお前なら、今日もいい仕事できるぜ。',
  '昨日も頑張ったな、えらいぞ！今日も笑顔で、のんびり進もうぜ。',
  'お前、昨日もちゃんとやってたな！今日もその調子で、楽しんでいこう。',
  '昨日のお疲れ、ちゃんと積み上がってるぞ！今日も気楽にやってこうな。',
  '新しい日だ！昨日も頑張ったお前なら、今日もいい感じで進めるぜ。',
  '昨日もいい仕事してたな！今日もお前のペースで、のんびりやってこう。',
  'お疲れ、昨日も一歩前進だ！今日も焦らず、笑顔で進もうぜ。',
  '昨日はいい汗かいてたな！今日もその調子で、気楽にやってこうな。',
  'よお、昨日もお前らしい一日だったな！今日もマイペースに、一歩進もうぜ。',
  '新しい一日、チャンス到来だ！昨日のお前なら、今日もバッチリいけるぜ。',
  '昨日もちゃんとやってたな！今日もお前のスタイルで、楽しんでいこう。',
  'お疲れ、昨日もいい感じだったぞ！今日も笑顔で、のんびりやろうぜ。',
  '昨日もよく頑張ったな！今日もお前のリズムで、気楽に進んでいこうぜ。',
  'おい、昨日もちゃんとやってたな！今日も楽しんで、一歩進もうぜ。',
  '昨日のお疲れ、ちゃんと見てたぞ！今日もお前のペースで、やってこう！',
  '新しい日だ！昨日も頑張ったお前なら、今日もいい感じでいけるぜ。',
  '昨日もお前らしい一日だったな！今日もそのままで、のんびりやろうぜ。',
  'お疲れ、昨日も一歩前進だ！今日も焦らず、笑顔で進もうな。',
  '昨日はいい仕事してたな！今日もお前のスタイルで、気楽にやってこう。',
  'よお、昨日も頑張ったな！今日もマイペースで、楽しんでいこうぜ。',
  '新しい一日、チャンスだ！昨日のお前なら、今日もバッチリやってくれるよな。',
  '昨日もいい汗かいてたな！今日もその調子で、のんびり進もうぜ。',
  'お前、昨日も光ってたな！今日も気楽に、自分のペースでやってこう！',
  '昨日のお疲れは、今日の力になるぜ。ゆっくりスタートして、楽しんでいこう。',
  '新しい日、始まったな！昨日も頑張ったお前なら、今日も最高だぜ。',
  '昨日もいい感じだったぞ！今日もお前のリズムで、笑顔でやってこう。',
  'お疲れ、昨日もよく耐えたな！今日も無理せず、気楽に進もうぜ。',
  '昨日もお前らしい頑張りだったな！今日もそのままで、マイペースにやろう。',
  '新しい一日、スタートだ！昨日のお前なら、今日もいい仕事できるぜ。',
  '昨日も頑張ったな、えらいぞ！今日も笑顔で、のんびり進もうぜ。',
  'お前、昨日もちゃんとやってたな！今日もその調子で、楽しんでいこう。',
  '昨日のお疲れ、ちゃんと積み上がってるぞ！今日も気楽にやってこうな。',
  '新しい日だ！昨日も頑張ったお前なら、今日もいい感じで進めるぜ。',
  '昨日もいい仕事してたな！今日もお前のペースで、のんびりやってこう。',
];

export const sendNotices = async (client: Client) => {
  const noticeChannels = await NoticeChannel.findMany();
  const content = messages[Math.floor(Math.random() * messages.length)];
  const components = [makeButtonRow('draw', 'counts')];
  for (const { guildId, channelId } of noticeChannels) {
    const guild = await client.guilds.fetch(guildId);
    const channel = await guild?.channels.fetch(channelId);
    if (channel instanceof TextChannel) {
      await channel.send({ content, components });
    }
  }
};
